//	You will be given three reels of different images and told at which index the reels stop. From this information your job is to return the score of the resulted reels.

//Rules
//1. There are always exactly three reels
//2. Each reel has 10 different items.
//3. The three reel inputs may be different.
//4. The spin array represents the index of where the reels finish.
//5. The three spin inputs may be different
//6. Three of the same is worth more than two of the same
//7. Two of the same plus one "Wild" is double the score.
//8. No matching items returns 0.

//Return an integer of the score.

public class Solution {
    public static int fruit(final String[][] reels, final int[] spins) {
		 String[] spun = new String[3];
		 spun[0] = reels[0][spins[0]];
		 spun[1] = reels[1][spins[1]];
		 spun[2] = reels[2][spins[2]];
		 
		 if(spun[0]!=spun[1]&&spun[1]!=spun[2]&&spun[0]!=spun[2]) {
			 return 0;
		 }
		 
		 else if(spun[0]==spun[1]||spun[0]==spun[2]||spun[1]==spun[2]) {
			 if(spun[0].equals(spun[1])&&spun[1].equals(spun[2])) {
				 switch(spun[0]) {
				 case "Wild": return 100;
				 case "Star": return 90;
				 case "Bell": return 80;
				 case "Shell": return 70;
				 case "Seven": return 60;
				 case "Cherry": return 50;
				 case "Bar": return 40;
				 case "King": return 30;
				 case "Queen": return 20;
				 case "Jack": return 10;
			 }
			 }
			 else if(spun[0].equals(spun[1])) {
				 if(spun[0].equals("Wild")) {
					 return 10;
				 }
				 else if(spun[2].equals("Wild")) {
					 switch(spun[0]) {
					 case "Star": return 18;
					 case "Bell": return 16;
					 case "Shell": return 14;
					 case "Seven": return 12;
					 case "Cherry": return 10;
					 case "Bar": return 8;
					 case "King": return 6;
					 case "Queen": return 4;
					 case "Jack": return 2;
					 }
				 }
					 
					 else {
						 switch(spun[0]) {
						 case "Star": return 9;
						 case "Bell": return 8;
						 case "Shell": return 7;
						 case "Seven": return 6;
						 case "Cherry": return 5;
						 case "Bar": return 4;
						 case "King": return 3;
						 case "Queen": return 2;
						 case "Jack": return 1; 
					 }
					 }
				 }
				 else if(spun[0].equals(spun[2])) {
					 if(spun[0].equals("Wild")) {
						 return 10;
					 }
					 else if(spun[1].equals("Wild")) {
						 switch(spun[0]) {
						 case "Star": return 18;
						 case "Bell": return 16;
						 case "Shell": return 14;
						 case "Seven": return 12;
						 case "Cherry": return 10;
						 case "Bar": return 8;
						 case "King": return 6;
						 case "Queen": return 4;
						 case "Jack": return 2;
						 } 
				 }
					 else {
						 switch(spun[0]) {
						 case "Star": return 9;
						 case "Bell": return 8;
						 case "Shell": return 7;
						 case "Seven": return 6;
						 case "Cherry": return 5;
						 case "Bar": return 4;
						 case "King": return 3;
						 case "Queen": return 2;
						 case "Jack": return 1;
					 }
			 }
				 }
				 else if(spun[1].equals(spun[2])){
					 if(spun[1].equals("Wild")) {
						 return 10;
					 }
					 else if(spun[0].equals("Wild")) {
						 switch(spun[1]) {
						 case "Star": return 18;
						 case "Bell": return 16;
						 case "Shell": return 14;
						 case "Seven": return 12;
						 case "Cherry": return 10;
						 case "Bar": return 8;
						 case "King": return 6;
						 case "Queen": return 4;
						 case "Jack": return 2;
						 } 
				 }
					 else {
						 switch(spun[1]) {
						 case "Star": return 9;
						 case "Bell": return 8;
						 case "Shell": return 7;
						 case "Seven": return 6;
						 case "Cherry": return 5;
						 case "Bar": return 4;
						 case "King": return 3;
						 case "Queen": return 2;
						 case "Jack": return 1;
					 }
		 }
		   
				 }
	}
		 return 0;
}
}
